version: '3'

services:
  db:
    image: postgres:16-alpine
    restart: on-failure
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      retries: 5
      timeout: 5s
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - "5432"

  app:
    build: .
    tty: true
    ports:
      - "8000:8000"
    command: sh -c "python skymarket/manage.py migrate && python skymarket/manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    environment:
      DB_ENGINE: ${DB_ENGINE}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}

  frontend:
    build: .
    volumes:
      - frontend:/app/build
    depends_on:
      - db

  nginx:
    image: nginx:1.19.3
    ports:
      - "3000:3000"
      - "80:80"
      - "8080:8080"
    volumes:
      - ./skymarket/django_static/:/usr/share/nginx/html/django_static/
      - ./skymarket/django_media/:/usr/share/nginx/html/django_media/
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend:/usr/share/nginx/html/
    restart: on-failure
    depends_on:
      - db
      - frontend

volumes:
  pg_data:
  frontend:
